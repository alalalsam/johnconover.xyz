Programmed a text-based clone of Yahtzee in 3 days

- Teacher (who worked at bell labs for 40 years) said my game was "pretty sophisticated"

 - Architecture of the game was 3 files: one for user interface, one for the game logic involved in taking a turn, and one for allocating turns to players.

 - Each player object would call functions to execute its turn, then store the scoring criteria used and total score for the next round.

 - Since the player objects were modularized, the entire game was structured as a for loop that executed 13 times (13 rounds per game) that cycled through the player array.

 - Fixed an exploit for an extra dice roll occurring at the end of your turn, if you already re-rolled 3 times and allow the next default scoring criteria to trigger.

 - Freshman year object-oriented programming all my team members came up to me the   week our project was due and said they don't know how to program in javascript they just used chegg the whole time :(
 
 
 
 
 Implemented machine learning on the Nintendo 3DS, in my fruitless quest to program universal stereoscopic 3d-mode support

 - Developed OS functionality on the 3DS to write stereoscopic 3d screenshots to the SD card every 3 seconds, with virtually zero interruption of normal gameplay. 

 - Solved a cache issue where the dummy variables used in the capture of my last framebuffer would be stored in memory immediately after the image write, overwriting the first column of pixels of the next stereoscopic image pair.

 - Displayed stereoscopic 3d image pairs generated by browarsoftware's stereofast machine learning algorithm (https://github.com/browarsoftware/stereofast) on the 3DS, to evaluate if they looked terrible or not using the 3d mode.

 - Ran MLperf tiny Visual Wake Words model on the 3ds to test the feasibility of running machine learning in real time on hardware from 2006 (wasn't good)


 
 Delivered a ~99.6% reduction in power draw for a prototype Bluetooth medical device

 - Implemented a new low-power IMU onto a prototype PCB, by breadboarding out connections then writing firmware and test scripts to record power consumption.

- Debugged I2C communication between a BGM220 and LSM6DSOX IMU using a logic analyzer, and recorded power consumption with a multimeter.

 - Ran the device through several custom test stands to evaluate energy harvesting capabilities.

 - Updated schematics to accommodate the hardware (really only the pull-up resistors needed to be swapped out).